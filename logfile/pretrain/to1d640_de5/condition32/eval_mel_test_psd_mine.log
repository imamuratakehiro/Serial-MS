
=== Using cuda(utils.func). ===

[2023-11-07 08:13:35,467][utils.utils][INFO] - [rank: 0] Enforcing tags! <cfg.extras.enforce_tags=True>
[2023-11-07 08:13:35,474][utils.utils][INFO] - [rank: 0] Printing config tree with Rich! <cfg.extras.print_config=True>
[2023-11-07 08:13:35,474][utils.rich_utils][WARNING] - [rank: 0] Field 'callbacks' not found in config. Skipping 'callbacks' config printing...
[2023-11-07 08:13:35,474][utils.rich_utils][WARNING] - [rank: 0] Field 'logger' not found in config. Skipping 'logger' config printing...
CONFIG
├── data
│   └── _target_: dataset.PreTrainDataModule                                    
│       cfg:                                                                    
│         n_epoch: 100                                                          
│         inst_list:                                                            
│         - drums                                                               
│         - bass                                                                
│         - piano                                                               
│         - guitar                                                              
│         - residuals                                                           
│         dataset_dir: /nas03/assets/Dataset/slakh                              
│         n_dataset_test: 1000                                                  
│         batch_train: 32                                                       
│         batch_test: 32                                                        
│         num_workers: 8                                                        
│         pin_memory: true                                                      
│         datasetname: slakh                                                    
│         seconds_psd_train: 3                                                  
│         seconds_psd_valid: 10                                                 
│         seconds_psd_test: 10                                                  
│         offset_psd_train: 1.5                                                 
│         offset_psd_valid: 5.0                                                 
│         offset_psd_test: 10.0                                                 
│         seconds_triplet_train: 3                                              
│         seconds_triplet_valid: 3                                              
│         offset_triplet_train: 1.5                                             
│         offset_triplet_valid: 1.5                                             
│         normalize128: false                                                   
│         condition32: true                                                     
│         load_using_librosa: true                                              
│         mono: true                                                            
│         f_size: 2048                                                          
│         hop_length: 512                                                       
│         sr: 44100                                                             
│         mel: true                                                             
│         n_mels: 259                                                           
│         db: true                                                              
│         target: model.UNetForTriplet_2d_de5_to1d640                           
│         to1d_mode: mean_linear                                                
│         order: timefreq                                                       
│         margin: 0.2                                                           
│         lr: 0.001                                                             
│         monitor_es: val/knn_avr                                               
│         monitor_mode_es: max                                                  
│         test_psd_mine: true                                                   
│         output_dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2023-
│                                                                               
├── model
│   └── _target_: model.PreTrain32                                              
│       optimizer:                                                              
│         _target_: torch.optim.Adam                                            
│         _partial_: true                                                       
│         lr: 0.005                                                             
│         weight_decay: 0.0                                                     
│       scheduler: null                                                         
│       net:                                                                    
│         _target_: model.UNetForTriplet_2d_de5_to1d640                         
│         inst_list:                                                            
│         - drums                                                               
│         - bass                                                                
│         - piano                                                               
│         - guitar                                                              
│         - residuals                                                           
│         f_size: 2048                                                          
│         mono: true                                                            
│         to1d_mode: mean_linear                                                
│         order: timefreq                                                       
│         mel: true                                                             
│         n_mels: 259                                                           
│       cfg:                                                                    
│         n_epoch: 100                                                          
│         inst_list:                                                            
│         - drums                                                               
│         - bass                                                                
│         - piano                                                               
│         - guitar                                                              
│         - residuals                                                           
│         dataset_dir: /nas03/assets/Dataset/slakh                              
│         n_dataset_test: 1000                                                  
│         batch_train: 32                                                       
│         batch_test: 32                                                        
│         num_workers: 8                                                        
│         pin_memory: true                                                      
│         datasetname: slakh                                                    
│         seconds_psd_train: 3                                                  
│         seconds_psd_valid: 10                                                 
│         seconds_psd_test: 10                                                  
│         offset_psd_train: 1.5                                                 
│         offset_psd_valid: 5.0                                                 
│         offset_psd_test: 10.0                                                 
│         seconds_triplet_train: 3                                              
│         seconds_triplet_valid: 3                                              
│         offset_triplet_train: 1.5                                             
│         offset_triplet_valid: 1.5                                             
│         normalize128: false                                                   
│         condition32: true                                                     
│         load_using_librosa: true                                              
│         mono: true                                                            
│         f_size: 2048                                                          
│         hop_length: 512                                                       
│         sr: 44100                                                             
│         mel: true                                                             
│         n_mels: 259                                                           
│         db: true                                                              
│         target: model.UNetForTriplet_2d_de5_to1d640                           
│         to1d_mode: mean_linear                                                
│         order: timefreq                                                       
│         margin: 0.2                                                           
│         lr: 0.001                                                             
│         monitor_es: val/knn_avr                                               
│         monitor_mode_es: max                                                  
│         test_psd_mine: true                                                   
│         output_dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2023-
│                                                                               
├── trainer
│   └── _target_: pytorch_lightning.trainer.Trainer                             
│       default_root_dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2
│       min_epochs: 1                                                           
│       max_epochs: 100                                                         
│       accelerator: auto                                                       
│       devices: 1                                                              
│       precision: 16                                                           
│       check_val_every_n_epoch: 1                                              
│       deterministic: false                                                    
│       enable_progress_bar: true                                               
│       log_every_n_steps: 10                                                   
│                                                                               
├── paths
│   └── root_dir: /home/imamura23/nas01home/codes/MusicSimilarityWithUNet       
│       data_dir: /home/imamura23/nas01home/codes/MusicSimilarityWithUNet/datase
│       log_dir: /home/imamura23/nas02home/outputs/                             
│       output_dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2023-11
│       work_dir: /nas01/homes/imamura23-1000067/codes/MusicSimilarityWithUNet  
│                                                                               
├── extras
│   └── ignore_warnings: false                                                  
│       enforce_tags: true                                                      
│       print_config: true                                                      
│                                                                               
├── task_name
│   └── eval_pretrain                                                           
├── tags
│   └── ['pretrain', 'model_2d_de5_to1d640', 'lr=0.005']                        
├── ckpt_path
│   └── /home/imamura23/nas02home/outputs/pretrain/runs/2023-11-07/01-11-14/chec
└── train
    └── n_epoch: 100                                                            
        inst_list:                                                              
        - drums                                                                 
        - bass                                                                  
        - piano                                                                 
        - guitar                                                                
        - residuals                                                             
        dataset_dir: /nas03/assets/Dataset/slakh                                
        n_dataset_test: 1000                                                    
        batch_train: 32                                                         
        batch_test: 32                                                          
        num_workers: 8                                                          
        pin_memory: true                                                        
        datasetname: slakh                                                      
        seconds_psd_train: 3                                                    
        seconds_psd_valid: 10                                                   
        seconds_psd_test: 10                                                    
        offset_psd_train: 1.5                                                   
        offset_psd_valid: 5.0                                                   
        offset_psd_test: 10.0                                                   
        seconds_triplet_train: 3                                                
        seconds_triplet_valid: 3                                                
        offset_triplet_train: 1.5                                               
        offset_triplet_valid: 1.5                                               
        normalize128: false                                                     
        condition32: true                                                       
        load_using_librosa: true                                                
        mono: true                                                              
        f_size: 2048                                                            
        hop_length: 512                                                         
        sr: 44100                                                               
        mel: true                                                               
        n_mels: 259                                                             
        db: true                                                                
        target: model.UNetForTriplet_2d_de5_to1d640                             
        to1d_mode: mean_linear                                                  
        order: timefreq                                                         
        margin: 0.2                                                             
        lr: 0.001                                                               
        monitor_es: val/knn_avr                                                 
        monitor_mode_es: max                                                    
        test_psd_mine: true                                                     
        output_dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2023-11
                                                                                
[2023-11-07 08:13:35,543][source.eval][INFO] - [rank: 0] Instantiating datamodule <dataset.PreTrainDataModule>
[2023-11-07 08:13:35,563][source.eval][INFO] - [rank: 0] Instantiating model <model.PreTrain32>

=== Using cuda(model.csn). ===


=== Using cuda(model.unet5.model_csn_640). ===


=== Using cuda(model.unet5.model_csn_640_de5). ===


=== Using cuda(model.unet5.model_normal). ===


=== Using cuda(model.unet5.model_notcsn_640_de5). ===


=== Using cuda(model.unet5.model_unet5_1d_de5). ===


=== Using cuda(model.waveunet.model_waveunet5). ===


=== Using cuda(model.triplet.model_triplet_csn_640_de5). ===


=== Using cuda(model.triplet.model_triplet_csn_640_de1). ===


=== Using cuda(model.triplet.model_triplet_128_de1). ===


=== Using cuda(model.triplet.model_triplet_inst). ===


=== Using cuda(model.triplet.model_triplet_1d_de5_embnet). ===


=== Using cuda(model.triplet.model_triplet_1d_de5_ae_embnet). ===


=== Using cuda(model.to1d.model_linear). ===


=== Using cuda(model.to1d.model_embedding). ===


=== Using cuda(model.triplet.model_triplet_csn640_de5_to1d_embedding). ===


=== Using cuda(model.triplet.model_triplet_to1d_embnet_silence). ===


=== Using cuda(model.triplet.model_triplet_2d_de5_to1d_embnet_lastmean). ===


=== Using cuda(model.triplet.model_nnet). ===


=== Using cuda(model.triplet.model_triplet_2d_csn640de5_to1d640). ===


=== Using cuda(model.jnet.model_jnet_128_embnet). ===


=== Using cuda(model.triplet.model_triplet_csn640_to1d640_1dde5). ===


=== Using cuda(model.triplet.model_triplet_to1d640_1dde1_embedding). ===


=== Using cuda(model.AE.model_ae). ===


=== Using cuda(model.demucs.model_demucs). ===


=== Using cuda(model.demucs.model_hdemucs). ===


=== Using cuda(model.jnet.model_jnet_attention). ===

[2023-11-07 08:13:39,579][torch.distributed.nn.jit.instantiator][INFO] - Created a temporary directory at /tmp/tmpocpawogg
[2023-11-07 08:13:39,580][torch.distributed.nn.jit.instantiator][INFO] - Writing /tmp/tmpocpawogg/_remote_module_non_scriptable.py
UNetForTriplet_2d_de5_to1d640(
  (encoder): UNetEncoder(
    (conv1): Conv2d(
      (conv): Sequential(
        (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
    (conv2): Conv2d(
      (conv): Sequential(
        (0): Conv2d(16, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
    (conv3): Conv2d(
      (conv): Sequential(
        (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
    (conv4): Conv2d(
      (conv): Sequential(
        (0): Conv2d(64, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
    (conv5): Conv2d(
      (conv): Sequential(
        (0): Conv2d(128, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
    (conv6): Conv2d(
      (conv): Sequential(
        (0): Conv2d(256, 640, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (bn): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (rl): LeakyReLU(negative_slope=0.2)
      )
    )
  )
  (decoder_drums): UNetDecoder(
    (deconv6_a): ConvTranspose2d(640, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv6_b): Sequential(
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv5_a): ConvTranspose2d(512, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv5_b): Sequential(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv4_a): ConvTranspose2d(256, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv4_b): Sequential(
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv3_a): ConvTranspose2d(128, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv3_b): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv2_a): ConvTranspose2d(64, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv2_b): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv1_a): ConvTranspose2d(32, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
  )
  (decoder_bass): UNetDecoder(
    (deconv6_a): ConvTranspose2d(640, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv6_b): Sequential(
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv5_a): ConvTranspose2d(512, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv5_b): Sequential(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv4_a): ConvTranspose2d(256, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv4_b): Sequential(
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv3_a): ConvTranspose2d(128, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv3_b): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv2_a): ConvTranspose2d(64, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv2_b): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv1_a): ConvTranspose2d(32, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
  )
  (decoder_piano): UNetDecoder(
    (deconv6_a): ConvTranspose2d(640, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv6_b): Sequential(
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv5_a): ConvTranspose2d(512, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv5_b): Sequential(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv4_a): ConvTranspose2d(256, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv4_b): Sequential(
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv3_a): ConvTranspose2d(128, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv3_b): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv2_a): ConvTranspose2d(64, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv2_b): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv1_a): ConvTranspose2d(32, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
  )
  (decoder_guitar): UNetDecoder(
    (deconv6_a): ConvTranspose2d(640, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv6_b): Sequential(
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv5_a): ConvTranspose2d(512, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv5_b): Sequential(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv4_a): ConvTranspose2d(256, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv4_b): Sequential(
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv3_a): ConvTranspose2d(128, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv3_b): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv2_a): ConvTranspose2d(64, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv2_b): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv1_a): ConvTranspose2d(32, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
  )
  (decoder_residuals): UNetDecoder(
    (deconv6_a): ConvTranspose2d(640, 256, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv6_b): Sequential(
      (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv5_a): ConvTranspose2d(512, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv5_b): Sequential(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv4_a): ConvTranspose2d(256, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv4_b): Sequential(
      (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Dropout2d(p=0.5, inplace=False)
    )
    (deconv3_a): ConvTranspose2d(128, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv3_b): Sequential(
      (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv2_a): ConvTranspose2d(64, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    (deconv2_b): Sequential(
      (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): LeakyReLU(negative_slope=0.2)
    )
    (deconv1_a): ConvTranspose2d(32, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
  )
  (to1d): To1D640(
    (to1d): To1D640timefreq(
      (fc1): Linear(in_features=3200, out_features=640, bias=True)
    )
  )
  (sigmoid): Sigmoid()
)
[2023-11-07 08:13:40,736][source.eval][INFO] - [rank: 0] Instantiating loggers...
[2023-11-07 08:13:40,736][utils.instantiators][WARNING] - [rank: 0] No logger configs found! Skipping...
[2023-11-07 08:13:40,736][source.eval][INFO] - [rank: 0] Instantiating trainer <pytorch_lightning.trainer.Trainer>
[2023-11-07 08:13:41,274][source.eval][INFO] - [rank: 0] Starting testing!

----------------------------------------
Use dataset slakh.
The frame size is setted to 2048.
----------------------------------------
Testing: |          | 0/? [00:00<?, ?it/s]Testing:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 0:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 0:   3%|▎         | 1/32 [00:08<04:14,  0.12it/s]Testing DataLoader 0:   6%|▋         | 2/32 [00:08<02:04,  0.24it/s]Testing DataLoader 0:   9%|▉         | 3/32 [00:08<01:21,  0.36it/s]Testing DataLoader 0:  12%|█▎        | 4/32 [00:08<00:59,  0.47it/s]Testing DataLoader 0:  16%|█▌        | 5/32 [00:08<00:46,  0.58it/s]Testing DataLoader 0:  19%|█▉        | 6/32 [00:08<00:37,  0.69it/s]Testing DataLoader 0:  22%|██▏       | 7/32 [00:08<00:31,  0.80it/s]Testing DataLoader 0:  25%|██▌       | 8/32 [00:08<00:26,  0.90it/s]Testing DataLoader 0:  28%|██▊       | 9/32 [00:08<00:22,  1.00it/s]Testing DataLoader 0:  31%|███▏      | 10/32 [00:09<00:19,  1.10it/s]Testing DataLoader 0:  34%|███▍      | 11/32 [00:09<00:17,  1.20it/s]Testing DataLoader 0:  38%|███▊      | 12/32 [00:09<00:15,  1.30it/s]Testing DataLoader 0:  41%|████      | 13/32 [00:09<00:13,  1.38it/s]Testing DataLoader 0:  44%|████▍     | 14/32 [00:09<00:12,  1.47it/s]Testing DataLoader 0:  47%|████▋     | 15/32 [00:09<00:10,  1.56it/s]Testing DataLoader 0:  50%|█████     | 16/32 [00:09<00:09,  1.65it/s]Testing DataLoader 0:  53%|█████▎    | 17/32 [00:09<00:08,  1.73it/s]Testing DataLoader 0:  56%|█████▋    | 18/32 [00:09<00:07,  1.81it/s]Testing DataLoader 0:  59%|█████▉    | 19/32 [00:10<00:06,  1.90it/s]Testing DataLoader 0:  62%|██████▎   | 20/32 [00:10<00:06,  1.98it/s]Testing DataLoader 0:  66%|██████▌   | 21/32 [00:10<00:05,  2.07it/s]Testing DataLoader 0:  69%|██████▉   | 22/32 [00:10<00:04,  2.15it/s]Testing DataLoader 0:  72%|███████▏  | 23/32 [00:10<00:04,  2.23it/s]Testing DataLoader 0:  75%|███████▌  | 24/32 [00:10<00:03,  2.31it/s]Testing DataLoader 0:  78%|███████▊  | 25/32 [00:10<00:02,  2.38it/s]Testing DataLoader 0:  81%|████████▏ | 26/32 [00:10<00:02,  2.46it/s]Testing DataLoader 0:  84%|████████▍ | 27/32 [00:10<00:01,  2.53it/s]Testing DataLoader 0:  88%|████████▊ | 28/32 [00:10<00:01,  2.61it/s]Testing DataLoader 0:  91%|█████████ | 29/32 [00:10<00:01,  2.68it/s]Testing DataLoader 0:  94%|█████████▍| 30/32 [00:10<00:00,  2.75it/s]Testing DataLoader 0:  97%|█████████▋| 31/32 [00:10<00:00,  2.82it/s]Testing DataLoader 0: 100%|██████████| 32/32 [00:11<00:00,  2.90it/s]Testing DataLoader 0:   0%|          | 0/32 [00:00<?, ?it/s]         Testing DataLoader 1:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 1:   3%|▎         | 1/32 [00:00<00:04,  7.70it/s]Testing DataLoader 1:   6%|▋         | 2/32 [00:00<00:04,  7.33it/s]Testing DataLoader 1:   9%|▉         | 3/32 [00:00<00:04,  7.00it/s]Testing DataLoader 1:  12%|█▎        | 4/32 [00:00<00:03,  7.29it/s]Testing DataLoader 1:  16%|█▌        | 5/32 [00:00<00:04,  6.63it/s]Testing DataLoader 1:  19%|█▉        | 6/32 [00:00<00:03,  6.95it/s]Testing DataLoader 1:  22%|██▏       | 7/32 [00:00<00:03,  7.30it/s]Testing DataLoader 1:  25%|██▌       | 8/32 [00:01<00:03,  6.98it/s]Testing DataLoader 1:  28%|██▊       | 9/32 [00:01<00:03,  7.18it/s]Testing DataLoader 1:  31%|███▏      | 10/32 [00:01<00:03,  7.18it/s]Testing DataLoader 1:  34%|███▍      | 11/32 [00:01<00:02,  7.36it/s]Testing DataLoader 1:  38%|███▊      | 12/32 [00:01<00:02,  7.51it/s]Testing DataLoader 1:  41%|████      | 13/32 [00:01<00:02,  7.69it/s]Testing DataLoader 1:  44%|████▍     | 14/32 [00:01<00:02,  7.89it/s]Testing DataLoader 1:  47%|████▋     | 15/32 [00:01<00:02,  7.96it/s]Testing DataLoader 1:  50%|█████     | 16/32 [00:01<00:01,  8.06it/s]Testing DataLoader 1:  53%|█████▎    | 17/32 [00:02<00:01,  8.13it/s]Testing DataLoader 1:  56%|█████▋    | 18/32 [00:02<00:01,  8.21it/s]Testing DataLoader 1:  59%|█████▉    | 19/32 [00:02<00:01,  8.33it/s]Testing DataLoader 1:  62%|██████▎   | 20/32 [00:02<00:01,  8.40it/s]Testing DataLoader 1:  66%|██████▌   | 21/32 [00:02<00:01,  8.53it/s]Testing DataLoader 1:  69%|██████▉   | 22/32 [00:02<00:01,  8.65it/s]Testing DataLoader 1:  72%|███████▏  | 23/32 [00:02<00:01,  8.76it/s]Testing DataLoader 1:  75%|███████▌  | 24/32 [00:02<00:00,  8.87it/s]Testing DataLoader 1:  78%|███████▊  | 25/32 [00:02<00:00,  8.97it/s]Testing DataLoader 1:  81%|████████▏ | 26/32 [00:02<00:00,  9.07it/s]Testing DataLoader 1:  84%|████████▍ | 27/32 [00:02<00:00,  9.16it/s]Testing DataLoader 1:  88%|████████▊ | 28/32 [00:03<00:00,  9.24it/s]Testing DataLoader 1:  91%|█████████ | 29/32 [00:03<00:00,  9.32it/s]Testing DataLoader 1:  94%|█████████▍| 30/32 [00:03<00:00,  9.39it/s]Testing DataLoader 1:  97%|█████████▋| 31/32 [00:03<00:00,  9.47it/s]Testing DataLoader 1: 100%|██████████| 32/32 [00:03<00:00,  9.69it/s]Testing DataLoader 1:   0%|          | 0/32 [00:00<?, ?it/s]         Testing DataLoader 2:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 2:   3%|▎         | 1/32 [00:00<00:05,  5.60it/s]Testing DataLoader 2:   6%|▋         | 2/32 [00:00<00:04,  6.00it/s]Testing DataLoader 2:   9%|▉         | 3/32 [00:00<00:04,  6.03it/s]Testing DataLoader 2:  12%|█▎        | 4/32 [00:00<00:04,  6.29it/s]Testing DataLoader 2:  16%|█▌        | 5/32 [00:00<00:03,  6.92it/s]Testing DataLoader 2:  19%|█▉        | 6/32 [00:00<00:03,  6.79it/s]Testing DataLoader 2:  22%|██▏       | 7/32 [00:01<00:03,  6.72it/s]Testing DataLoader 2:  25%|██▌       | 8/32 [00:01<00:03,  6.39it/s]Testing DataLoader 2:  28%|██▊       | 9/32 [00:01<00:03,  6.47it/s]Testing DataLoader 2:  31%|███▏      | 10/32 [00:01<00:03,  6.49it/s]Testing DataLoader 2:  34%|███▍      | 11/32 [00:01<00:03,  6.52it/s]Testing DataLoader 2:  38%|███▊      | 12/32 [00:01<00:02,  6.77it/s]Testing DataLoader 2:  41%|████      | 13/32 [00:01<00:02,  7.00it/s]Testing DataLoader 2:  44%|████▍     | 14/32 [00:01<00:02,  7.22it/s]Testing DataLoader 2:  47%|████▋     | 15/32 [00:02<00:02,  7.36it/s]Testing DataLoader 2:  50%|█████     | 16/32 [00:02<00:02,  7.50it/s]Testing DataLoader 2:  53%|█████▎    | 17/32 [00:02<00:02,  7.38it/s]Testing DataLoader 2:  56%|█████▋    | 18/32 [00:02<00:01,  7.53it/s]Testing DataLoader 2:  59%|█████▉    | 19/32 [00:02<00:01,  7.68it/s]Testing DataLoader 2:  62%|██████▎   | 20/32 [00:02<00:01,  7.83it/s]Testing DataLoader 2:  66%|██████▌   | 21/32 [00:02<00:01,  7.96it/s]Testing DataLoader 2:  69%|██████▉   | 22/32 [00:02<00:01,  8.09it/s]Testing DataLoader 2:  72%|███████▏  | 23/32 [00:02<00:01,  8.21it/s]Testing DataLoader 2:  75%|███████▌  | 24/32 [00:02<00:00,  8.32it/s]Testing DataLoader 2:  78%|███████▊  | 25/32 [00:02<00:00,  8.40it/s]Testing DataLoader 2:  81%|████████▏ | 26/32 [00:03<00:00,  8.50it/s]Testing DataLoader 2:  84%|████████▍ | 27/32 [00:03<00:00,  8.60it/s]Testing DataLoader 2:  88%|████████▊ | 28/32 [00:03<00:00,  8.69it/s]Testing DataLoader 2:  91%|█████████ | 29/32 [00:03<00:00,  8.77it/s]Testing DataLoader 2:  94%|█████████▍| 30/32 [00:03<00:00,  8.85it/s]Testing DataLoader 2:  97%|█████████▋| 31/32 [00:03<00:00,  8.93it/s]Testing DataLoader 2: 100%|██████████| 32/32 [00:03<00:00,  9.14it/s]Testing DataLoader 2:   0%|          | 0/32 [00:00<?, ?it/s]         Testing DataLoader 3:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 3:   3%|▎         | 1/32 [00:00<00:06,  4.56it/s]Testing DataLoader 3:   6%|▋         | 2/32 [00:00<00:05,  5.21it/s]Testing DataLoader 3:   9%|▉         | 3/32 [00:00<00:05,  5.67it/s]Testing DataLoader 3:  12%|█▎        | 4/32 [00:00<00:05,  5.59it/s]Testing DataLoader 3:  16%|█▌        | 5/32 [00:00<00:04,  5.47it/s]Testing DataLoader 3:  19%|█▉        | 6/32 [00:01<00:04,  5.81it/s]Testing DataLoader 3:  22%|██▏       | 7/32 [00:01<00:03,  6.27it/s]Testing DataLoader 3:  25%|██▌       | 8/32 [00:01<00:03,  6.66it/s]Testing DataLoader 3:  28%|██▊       | 9/32 [00:01<00:03,  6.81it/s]Testing DataLoader 3:  31%|███▏      | 10/32 [00:01<00:03,  7.13it/s]Testing DataLoader 3:  34%|███▍      | 11/32 [00:01<00:02,  7.41it/s]Testing DataLoader 3:  38%|███▊      | 12/32 [00:01<00:02,  7.51it/s]Testing DataLoader 3:  41%|████      | 13/32 [00:01<00:02,  7.67it/s]Testing DataLoader 3:  44%|████▍     | 14/32 [00:01<00:02,  7.81it/s]Testing DataLoader 3:  47%|████▋     | 15/32 [00:01<00:02,  8.00it/s]Testing DataLoader 3:  50%|█████     | 16/32 [00:01<00:01,  8.18it/s]Testing DataLoader 3:  53%|█████▎    | 17/32 [00:02<00:01,  8.12it/s]Testing DataLoader 3:  56%|█████▋    | 18/32 [00:02<00:01,  7.96it/s]Testing DataLoader 3:  59%|█████▉    | 19/32 [00:02<00:01,  7.94it/s]Testing DataLoader 3:  62%|██████▎   | 20/32 [00:02<00:01,  8.03it/s]Testing DataLoader 3:  66%|██████▌   | 21/32 [00:02<00:01,  8.17it/s]Testing DataLoader 3:  69%|██████▉   | 22/32 [00:02<00:01,  8.27it/s]Testing DataLoader 3:  72%|███████▏  | 23/32 [00:02<00:01,  8.39it/s]Testing DataLoader 3:  75%|███████▌  | 24/32 [00:02<00:00,  8.51it/s]Testing DataLoader 3:  78%|███████▊  | 25/32 [00:02<00:00,  8.62it/s]Testing DataLoader 3:  81%|████████▏ | 26/32 [00:02<00:00,  8.72it/s]Testing DataLoader 3:  84%|████████▍ | 27/32 [00:03<00:00,  8.81it/s]Testing DataLoader 3:  88%|████████▊ | 28/32 [00:03<00:00,  8.90it/s]Testing DataLoader 3:  91%|█████████ | 29/32 [00:03<00:00,  8.99it/s]Testing DataLoader 3:  94%|█████████▍| 30/32 [00:03<00:00,  9.08it/s]Testing DataLoader 3:  97%|█████████▋| 31/32 [00:03<00:00,  9.15it/s]Testing DataLoader 3: 100%|██████████| 32/32 [00:03<00:00,  9.37it/s]Testing DataLoader 3:   0%|          | 0/32 [00:00<?, ?it/s]         Testing DataLoader 4:   0%|          | 0/32 [00:00<?, ?it/s]Testing DataLoader 4:   3%|▎         | 1/32 [00:00<00:07,  4.11it/s]Testing DataLoader 4:   6%|▋         | 2/32 [00:00<00:05,  5.12it/s]Testing DataLoader 4:   9%|▉         | 3/32 [00:00<00:05,  5.62it/s]Testing DataLoader 4:  12%|█▎        | 4/32 [00:00<00:04,  5.89it/s]Testing DataLoader 4:  16%|█▌        | 5/32 [00:00<00:04,  6.49it/s]Testing DataLoader 4:  19%|█▉        | 6/32 [00:00<00:03,  6.92it/s]Testing DataLoader 4:  22%|██▏       | 7/32 [00:00<00:03,  7.27it/s]Testing DataLoader 4:  25%|██▌       | 8/32 [00:01<00:03,  7.18it/s]Testing DataLoader 4:  28%|██▊       | 9/32 [00:01<00:03,  7.36it/s]Testing DataLoader 4:  31%|███▏      | 10/32 [00:01<00:02,  7.66it/s]Testing DataLoader 4:  34%|███▍      | 11/32 [00:01<00:02,  7.37it/s]Testing DataLoader 4:  38%|███▊      | 12/32 [00:01<00:02,  7.62it/s]Testing DataLoader 4:  41%|████      | 13/32 [00:01<00:02,  7.84it/s]Testing DataLoader 4:  44%|████▍     | 14/32 [00:01<00:02,  7.86it/s]Testing DataLoader 4:  47%|████▋     | 15/32 [00:01<00:02,  8.04it/s]Testing DataLoader 4:  50%|█████     | 16/32 [00:01<00:01,  8.21it/s]Testing DataLoader 4:  53%|█████▎    | 17/32 [00:02<00:01,  8.24it/s]Testing DataLoader 4:  56%|█████▋    | 18/32 [00:02<00:01,  8.37it/s]Testing DataLoader 4:  59%|█████▉    | 19/32 [00:02<00:01,  8.47it/s]Testing DataLoader 4:  62%|██████▎   | 20/32 [00:02<00:01,  8.61it/s]Testing DataLoader 4:  66%|██████▌   | 21/32 [00:02<00:01,  8.73it/s]Testing DataLoader 4:  69%|██████▉   | 22/32 [00:02<00:01,  8.85it/s]Testing DataLoader 4:  72%|███████▏  | 23/32 [00:02<00:01,  8.96it/s]Testing DataLoader 4:  75%|███████▌  | 24/32 [00:02<00:00,  9.06it/s]Testing DataLoader 4:  78%|███████▊  | 25/32 [00:02<00:00,  9.16it/s]Testing DataLoader 4:  81%|████████▏ | 26/32 [00:02<00:00,  9.25it/s]Testing DataLoader 4:  84%|████████▍ | 27/32 [00:02<00:00,  9.34it/s]Testing DataLoader 4:  88%|████████▊ | 28/32 [00:02<00:00,  9.42it/s]Testing DataLoader 4:  91%|█████████ | 29/32 [00:03<00:00,  9.50it/s]Testing DataLoader 4:  94%|█████████▍| 30/32 [00:03<00:00,  9.57it/s]Testing DataLoader 4:  97%|█████████▋| 31/32 [00:03<00:00,  9.64it/s]Testing DataLoader 4: 100%|██████████| 32/32 [00:03<00:00,  9.86it/s]= T-SNE...
ディレクトリを作成します
T-SNE was finished!
= T-SNE time is 16.118998765945435 sec. =
knn accuracy test drums     : 73.4%
= T-SNE...
ディレクトリを作成します
T-SNE was finished!
= T-SNE time is 16.128180503845215 sec. =
knn accuracy test bass      : 10.0%
= T-SNE...
ディレクトリを作成します
T-SNE was finished!
= T-SNE time is 16.021944999694824 sec. =
knn accuracy test piano     : 40.0%
= T-SNE...
ディレクトリを作成します
T-SNE was finished!
= T-SNE time is 16.141846418380737 sec. =
knn accuracy test guitar    : 15.0%
= T-SNE...
ディレクトリを作成します
T-SNE was finished!
= T-SNE time is 16.354950666427612 sec. =
knn accuracy test residuals : 75.4%

knn accuracy test average   : 42.76%
Testing DataLoader 4: 100%|██████████| 32/32 [01:42<00:00,  0.31it/s]
┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓
┃    Test metric    ┃   DataLoader 0    ┃   DataLoader 1    ┃   DataLoader 2   ┃
┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩
│   test/knn_avr    │ 0.42759999632835… │ 0.42759999632835… │ 0.4275999963283… │
│   test/knn_bass   │ 0.10000000149011… │ 0.10000000149011… │ 0.1000000014901… │
│  test/knn_drums   │ 0.734000027179718 │ 0.734000027179718 │ 0.7340000271797… │
│  test/knn_guitar  │ 0.15000000596046… │ 0.15000000596046… │ 0.1500000059604… │
│  test/knn_piano   │ 0.40000000596046… │ 0.40000000596046… │ 0.4000000059604… │
│ test/knn_residua… │ 0.75400000810623… │ 0.75400000810623… │ 0.7540000081062… │
└───────────────────┴───────────────────┴───────────────────┴──────────────────┘
┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃       Test metric       ┃      DataLoader 3       ┃       DataLoader 4       ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│      test/knn_avr       │   0.4275999963283539    │    0.4275999963283539    │
│      test/knn_bass      │   0.10000000149011612   │   0.10000000149011612    │
│     test/knn_drums      │    0.734000027179718    │    0.734000027179718     │
│     test/knn_guitar     │   0.15000000596046448   │   0.15000000596046448    │
│     test/knn_piano      │   0.4000000059604645    │    0.4000000059604645    │
│   test/knn_residuals    │   0.7540000081062317    │    0.7540000081062317    │
└─────────────────────────┴─────────────────────────┴──────────────────────────┘
[2023-11-07 08:16:02,323][utils.utils][INFO] - [rank: 0] Output dir: /home/imamura23/nas02home/outputs/eval_pretrain/runs/2023-11-07/08-13-35
